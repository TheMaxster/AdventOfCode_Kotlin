/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package application

import utils.ImportUtils
import year2024.day01.Day01
import year2024.day02.Day02
import year2024.day03.Day03
import year2024.day04.Day04
import year2024.day05.Day05
import main.kotlin.year2024.day06.Day06
import year2024.day07.Day07
import year2024.day08.Day08
import year2024.day09.Day09
import year2024.day10.Day10
import year2024.day11.Day11
import year2024.day12.Day12
import year2024.day13.Day13
import year2024.day14.Day14
import year2024.day15.Day15
import year2024.day16.Day16
import year2024.day17.Day17
import year2024.day18.Day18
import year2024.day19.Day19
import year2024.day20.Day20

object Application {
    private val DAYS2023: MutableMap<Int, Day> = HashMap()
    private val DAYS2024: MutableMap<Int, Day> = HashMap()
    private val YEARS: MutableMap<Int, Map<Int, Day>> = HashMap()

    init {
        DAYS2023[1] = year2023.day01.Day01()
        DAYS2023[2] = year2023.day02.Day02()
        DAYS2023[3] = year2023.day03.Day03()
//        DAYS2023[3] = Day03()
//        DAYS2023[4] = Day04()
//        DAYS2023[5] = Day05() // Part 2 needs a lot of time
//        DAYS2023[6] = Day06()
//        DAYS2023[7] = Day07()
//        DAYS2023[8] = Day08()
//        DAYS2023[9] = Day09()
//        DAYS2023[10] = Day10()
//        DAYS2023[11] = Day11()
//        DAYS2023[12] = Day12()
//        DAYS2023[13] = Day13()
//        DAYS2023[14] = Day14()
//        DAYS2023[15] = Day15()
//        DAYS2023[16] = Day16()
//        DAYS2023[17] = Day17()
//        DAYS2023[18] = Day18()
//        DAYS2023[19] = Day19()
//        DAYS2023[20] = Day20() // Part 01 doesn't work
//        DAYS2023[21] = Day21()
//        DAYS2023[22] = Day22() // Not existing
//
        DAYS2024[1] = Day01()
        DAYS2024[2] = Day02()
        DAYS2024[3] = Day03()
        DAYS2024[4] = Day04()
        DAYS2024[5] = Day05()
        DAYS2024[6] = Day06()
        DAYS2024[7] = Day07()
        DAYS2024[8] = Day08()
        DAYS2024[9] = Day09()
        DAYS2024[10] = Day10()
        DAYS2024[11] = Day11()
        DAYS2024[12] = Day12()
        DAYS2024[13] = Day13()
        DAYS2024[14] = Day14()
        DAYS2024[15] = Day15()
        DAYS2024[16] = Day16()
        DAYS2024[17] = Day17()
        DAYS2024[18] = Day18()
        DAYS2024[19] = Day19()
        DAYS2024[20] = Day20()

        YEARS[2023] = DAYS2023
        YEARS[2024] = DAYS2024
    }

    private fun loadInput(day: Int, year: Int): List<String> {
        var paddedDay = day.toString()
        if (day < 10) {
            paddedDay = "0$day"
        }
        val filePath = "src/main/resources/year$year/day$paddedDay/input.txt"

        return ImportUtils.readAsList(filePath)
    }

        @JvmStatic
        fun main(args: Array<String>) {
            val year = args.getOrNull(0)?.toIntOrNull() ?: 2023
            val day = args.getOrNull(1)?.toIntOrNull() ?: 1

            val input = loadInput(day, year)

            println("Executing: $year-$day")
            YEARS[year]?.get(day)?.let { daySolution ->
                println("Solution Part 1: ${daySolution.part1(input)}")
                println("Solution Part 2: ${daySolution.part2(input)}")
            } ?: println("Error: No solution available for year $year and day $day.")
        }
}
